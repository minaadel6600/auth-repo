import {Request,Response, NextFunction } from 'express'; 
import HttpError from '../models/error.model';
import IRequest from '../interfaces/i-request';

const dataValidator = (dataSchema:any) => {
  return  async ( 
  req: IRequest,
  res: Response,
  next: NextFunction
) => {
  try {
    if (!req.body) {
      return res.status(400).send({ message: 'Missing request body!' });
    }

    // the validateAsync method is built into Joi
    await dataSchema.validateAsync(req.body);

    next();
  } catch (e: any) {
    // if validation fails we send the message generated by Joi
    //res.status(400).send({ message: e.message });
    next(new HttpError(400,e.message))
  }
}}

export default dataValidator;